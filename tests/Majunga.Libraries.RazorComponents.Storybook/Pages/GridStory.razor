@page "/gridStory"

@using Majunga.Libraries.RazorComponents.Components.Grid
@inject HttpClient Http

<Grid TModelItem="WeatherForecast" Data="@forecasts">
    <GridToolbarTop>
        <button class="btn btn-primary">Add</button>
    </GridToolbarTop>
    <GridToolbarBottom>
        <button class="btn btn-primary">Add</button>
    </GridToolbarBottom>
    <Columns>
        <GridColumn Title="Id" Field="@nameof(WeatherForecast.Id)" IsKey="true" />
        <GridColumn Title="Date" Field="@nameof(WeatherForecast.Date)" DisplayFormat="{0:dd MMM yyyy}" />
        <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" DisplayFormat="{0:N0}°C" />
        <GridColumn Title="TemperatureF" Field="@nameof(WeatherForecast.TemperatureF)" DisplayFormat="{0:N2}°F" />
        <GridColumn Title="Summary" Field="@nameof(WeatherForecast.Summary)" />
        <GridColumn>
            <button class="btn btn-danger">Delete</button>
        </GridColumn>
    </Columns>
</Grid>


@code {
    private WeatherForecast[]? forecasts;


    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sampledata/weather.json");
        await base.OnInitializedAsync();
    }

    public class WeatherForecast
    {
        public string Id { get; set; } = null!;
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public double TemperatureF => 32 + (TemperatureC / 0.5556);
    }
}
